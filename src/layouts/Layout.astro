---
// Fonts
import "@fontsource/cinzel-decorative/400.css";
import "@fontsource/cinzel-decorative/700.css";
import "@fontsource/cinzel-decorative/900.css";
import "@fontsource-variable/lora";
import "@fontsource/unifrakturcook";
// Base CSS Files
import "vue3-toastify/dist/index.css";
import "mapbox-gl/dist/mapbox-gl.css";
import "animate.css";
import "@/styles/base.css";
import "aos/dist/aos.css";

import ThemeToggle from "@/components/ui/client/ThemeToggle.vue";
import LanguageToggle from "@/components/ui/client/LanguageToggle.vue";
import HeaderLink from "@/components/ui/client/HeaderLink.vue";
import { getCollection } from "astro:content";
import { getLocaleFilter } from "../utils/locale";
import { SEO } from "astro-seo";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;

const sectionsUnsorted = await getCollection("section", getLocaleFilter(Astro));
const sections = sectionsUnsorted.toSorted(
  (a, b) => a.data.order - b.data.order
);
---

<html
  lang="en"
  class="bg-silver-100 h-dvh w-dvw snap-y text-black transition-colors ease-in-out max-md:snap-proximity md:snap-mandatory dark:bg-black dark:text-white"
>
  <head>
    <meta charset="utf-8" />
    <SEO
      title={title}
      description={description}
      openGraph={{
        basic: {
          title,
          type: "website",
          image: "/avatar.jpg",
        },
      }}
      extend={{
        // extending the default link tags
        link: [{ rel: "icon", href: "/favicon.ico" }],
      }}
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        document.documentElement.classList.add("dark");
      }
    </script>
  </head>
  <body class="relative">
    <header
      class="border-b-primary-500 border-b-0.5 fixed left-0 top-0 z-10 flex h-16 w-dvw items-center justify-end gap-4 bg-white/75 p-4 dark:bg-black/75"
    >
      {
        sections.map(section => (
          <HeaderLink
            class="max-md:hidden"
            elementId={section.data.target}
            client:load
          >
            {section.data.title}
          </HeaderLink>
        ))
      }
      <LanguageToggle class="ml-4" locale={Astro.currentLocale} client:load />
      <ThemeToggle client:load />
    </header>
    <main class="relative flex flex-col items-center gap-8 px-4">
      <slot />
    </main>
    <script>
      import AOS from "aos";
      AOS.init({
        once: true,
        startEvent: "load",
      });
    </script>
  </body>
</html>
